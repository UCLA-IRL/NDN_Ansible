---
# tasks file for nfd-status-http-server
- name: install nfd-status-http-server
  apt: name=nfd-status-http-server state=latest update_cache=yes
  when: ansible_distribution == "Ubuntu" 

- name: copy /lib/systemd/system/nfd-status-http-server.service
  copy: dest=/lib/systemd/system/nfd-status-http-server.service src=roles/nfd-status-http-server/files/nfd-status-http-server.service owner=root group=root mode=0644
  when: ansible_distribution == "RedHat" or (ansible_distribution == "Ubuntu" and ansible_distribution_major_version  == "16")

- file: path=/etc/systemd/system/multi-user.target.wants/nfd-status-http-server.service  state=link  src=/lib/systemd/system/nfd-status-http-server.service
  when: ansible_distribution == "RedHat" or (ansible_distribution == "Ubuntu" and ansible_distribution_major_version  == "16")

- command: systemctl daemon-reload
  when: ansible_distribution == "RedHat"

- name: start nfd-status-http-server
  service: name=nfd-status-http-server state=started enabled=yes

- name: copy port 80 default file to RedHat systems
  copy: dest=/etc/default/nfd-status-http-server src=roles/nfd-status-http-server/files/nfd-status-http-server.default.80 owner=root group=root mode=0644
  when: ansible_distribution == "RedHat"

- name: copy port 8080 default file to BUPT
  copy: dest=/etc/default/nfd-status-http-server src=roles/nfd-status-http-server/files/nfd-status-http-server.default.8080 owner=root group=root mode=0644
  when: inventory_hostname == "BUPT"

# Set up TLS websocket support
- name: stop nfd-status-http-server.server for Ubuntu 16.04
  shell: systemctl stop nfd-status-http-server.service
  when: (ansible_distribution == "Ubuntu" and ansible_distribution_major_version  == "16") 

- name: install nginx
  apt: name=nginx state=latest update_cache=yes
  when: ansible_distribution == "Ubuntu" 

- name: remove nginx default site
  file: path=/etc/nginx/sites-enabled/default state=absent
  when: ansible_distribution == "Ubuntu" 

- name: install certbot-auto from EFF
  get_url: url=https://dl.eff.org/certbot-auto dest=/usr/local/bin/certbot-auto mode=0755
  when: ansible_distribution == "Ubuntu" 
  ignore_errors: yes

- name: create certbotRun.sh
  template: src=certbotRun.sh.j2 dest=/home/ndnops/certbotRun.sh  owner=root group=root mode="u=rwx,g=rx,o=rx"
  when: ansible_distribution == "Ubuntu" 

- name: run certbotRun.sh
  shell: /home/ndnops/certbotRun.sh
  when: ansible_distribution == "Ubuntu" 
  ignore_errors: yes

- name: create /etc/nginx/sites-available/nfd
  template: src=nfd_site.j2 dest=/etc/nginx/sites-available/nfd  owner=root group=root mode="u=rw,g=r,o=r"
  when: ansible_distribution == "Ubuntu" 

- file: path=/etc/nginx/sites-enabled/nfd state=link  src=/etc/nginx/sites-available/nfd
  when: ansible_distribution == "Ubuntu"

- cron: name="renew certbot" user="root" day="28" hour="1" minute="30" job="/usr/local/bin/certbot-auto renew --standalone --pre-hook \"service nfd-status-http-server stop; service nginx stop\" --post-hook \"service nfd-status-http-server start; service nginx start\""

#- cron: name="renew certbot" user="root" day="28" hour="1" minute="30" job="/usr/local/bin/certbot-auto renew --standalone --pre-hook \"initctl stop nfd-status-http-server; service nginx stop\" --post-hook \"initctl start nfd-status-http-server; service nginx start\""
#  when: (ansible_distribution == "Ubuntu" and ansible_distribution_major_version  == "14") 
#
#- cron: name="renew certbot" user="root" day="28" hour="1" minute="30" job="/usr/local/bin/certbot-auto renew --standalone --pre-hook \"systemctl stop nfd-status-http-server; service nginx stop\" --post-hook \"systemctl start nfd-status-http-server; service nginx start\""
#  when: (ansible_distribution == "Ubuntu" and ansible_distribution_major_version  == "16") 
#
- name: start nfd-status-http-server.server for Ubuntu 16.04
  shell: systemctl start nfd-status-http-server.service
  when: (ansible_distribution == "Ubuntu" and ansible_distribution_major_version  == "16") 

