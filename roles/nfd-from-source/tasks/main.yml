---
# tasks file for nfd-from-source
#- name: install nfd
#  apt: name=nfd state=absent purge=yes update_cache=yes

- name: add ndn user
  user: name=ndn state=present shell=/bin/false createhome=no

#- name: add ndnsec user
#  user: name=ndnsec state=present shell=/bin/bash password=LrVkOUM1s16xE

- name: make ndn required directories
  file: path=/etc/ndn state=directory owner=ndn group=ndn mode=0755
- file: path=/etc/ndn/keys state=directory owner=ndn group=ndn mode=0755
- file: path=/var/lib/ndn state=directory owner=ndn group=ndn mode=0755
- file: path=/var/log/ndn state=directory owner=ndn group=ndn mode=0755

- cron: name="log rotate" user="ndnops" hour="1" minute="1" job="/home/ndnops/ndn-ops/NOC/logRotation/rotateLogs.sh  "

#- name: install NFD from source
#  apt: name=nfd state=latest update_cache=yes

- name: git nfd
  git: repo=http://github.com/named-data/NFD
       dest=/tmp/NFD
       update=yes
       version={{nfd_version}}
  register: gitclone

#- name: configure NFD
- command: ./waf --boost-libs="{{ boost_base_location }}"/lib --boost-includes="{{ boost_base_location }}"/include configure
  args:
    chdir: /tmp/NFD
  when: gitclone.changed

#- name: clean NFD
- command: ./waf clean
  args:
    chdir: /tmp/NFD
  when: gitclone.changed

#- name: build NFD
- command: ./waf 
  args:
    chdir: /tmp/NFD
  when: gitclone.changed

#- name: install NFD
- command: ./waf  install
  args:
    chdir: /tmp/NFD
  when: gitclone.changed


- name: copy /etc/init/nfd.conf
  copy: dest=/etc/init/nfd.conf src=roles/nfd-from-source/files/etc-init-nfd.conf owner=root group=root mode=0644
  when: ansible_distribution == "Ubuntu" 

- name: copy /lib/systemd/system/nfd.service
  copy: dest=/lib/systemd/system/nfd.service src=roles/nfd-from-source/files/nfd.service owner=root group=root mode=0644
  when: ansible_distribution == "RedHat" 

- file: path=/etc/systemd/system/multi-user.target.wants/nfd.service  state=link  src=/lib/systemd/system/nfd.service
  when: ansible_distribution == "RedHat" 

- command: systemctl daemon-reload
  when: ansible_distribution == "RedHat" 

- name: copy root key
  #copy: dest=/etc/ndn/keys/ansible_ndn-testbed-root.ndncert.base64 src=roles/nfd-from-source/files/ndn-testbed-root.ndncert.base64 owner=root group=root mode=0644
  copy: dest=/etc/ndn/keys/ndn-testbed-root.ndncert.base64 src=roles/nfd-from-source/files/ndn-testbed-root.ndncert.base64 owner=root group=root mode=0644

- name: create nfd.conf
  #template: src=nfd.conf.j2 dest=/etc/ndn/ansible_nfd.conf owner=root group=root mode="u=rw,g=r,o=r"
  template: src=nfd.conf.j2 dest=/etc/ndn/nfd.conf owner=root group=root mode="u=rw,g=r,o=r"
  notify: restart nfd

- name: create nfd-init.sh
  #template: src=nfd-init.sh.j2 dest=/etc/ndn/ansible_nfd-init.sh  owner=root group=root mode="u=rwx,g=rx,o=rx"
  template: src=nfd-init.sh.j2 dest=/etc/ndn/nfd-init.sh  owner=root group=root mode="u=rwx,g=rx,o=rx"
  notify: restart nfd

- name: start nfd
  service: name=nfd state=started enabled=yes

# restart nfd immediately, don't wait for end of playbook
- meta: flush_handlers

