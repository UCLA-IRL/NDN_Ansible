---
# tasks file for ndnsec

- name: add ndnsec user
  user: name=ndnsec state=present shell=/bin/bash password=LrVkOUM1s16xE

- name: install ndnsec libraries 
  action: >
       {{ ansible_pkg_mgr }} name={{ item }} state=latest update_cache=yes
  with_items:
       - ndnsec


- cron: name="auto-approve guest certs" state=present user="ndnsec" minute="*/5" job="/usr/local/bin/ndnop-process-requests --guest-only --auto-approve"
  when: supports_guest_certs and inventory_hostname != "UCLA"

- cron: name="auto-approve guest certs" state=absent user="ndnsec" minute="*/5" job="/usr/local/bin/ndnop-process-requests --guest-only --auto-approve"
  when: not supports_guest_certs

- script: roles/ndnsec/files/checkKey.sh "{{ default_prefix }}"
  register: key_present
  ignore_errors: yes

- debug:
    msg: "Found key exists for default_prefix: {{ default_prefix }}"
  when: key_present is defined and (key_present.rc == 0)

- debug:
    msg: "Found key does NOT exists for default_prefix: {{ default_prefix }}"
  when: key_present is defined and (key_present.rc != 0)

- script: roles/ndnsec/files/generateKey.sh "{{ default_prefix }}"
  when: key_present is not defined or key_present.rc != 0
  ignore_errors: yes

# Check that there is a default name and that default_prefix == default name on node
# if not, try to change default name to default_prefix
- script: roles/ndnsec/files/checkName.sh "{{ default_prefix }}"
  register: name_present
  ignore_errors: yes

- debug:
    msg: "Found default name agrees with default_prefix: {{ default_prefix }}"
  when: name_present.rc == 0

- debug:
    msg: "Found default name does NOT agree with default_prefix: {{ default_prefix }}"
  when: name_present.rc != 0

- script: roles/ndnsec/files/setDefaultName.sh "{{ default_prefix }}"
  when: name_present.rc != 0
  register: name_present2
  ignore_errors: yes

- debug:
    msg: "Tried setting default name. Default name still does NOT agree with default_prefix: {{ default_prefix }}"
  when: name_present2 is defined and (name_present2.rc != 0)

- script: roles/ndnsec/files/checkCert.sh "{{ default_prefix }}"
  register: cert_present
  when: ((key_present is defined and key_present.rc == 0) or (key_present2 is defined and key_present2.rc == 0))
  ignore_errors: yes

- debug:
    msg: "Found cert exists for default_prefix: {{ default_prefix }}"
  when: cert_present is defined and (cert_present.rc == 0)

- debug:
    msg: "Found cert does NOT exist for default_prefix: {{ default_prefix }}"
  when: cert_present is defined and (cert_present.rc != 0)

- script: roles/ndnsec/files/checkForValidCert.sh "{{ default_prefix }}"
  register: cert_valid
  when: cert_present is defined and (cert_present.rc == 0)
  ignore_errors: yes

- debug:
    msg: "Found valid cert exists for default_prefix: {{ default_prefix }}"
  when: cert_valid is defined and (cert_valid.rc == 0)

- debug:
    msg: "Found valid cert does NOT exist for default_prefix: {{ default_prefix }}"
  when: cert_valid is defined and (cert_valid.rc != 0)

- script: roles/ndnsec/files/installCert.sh "{{ cert_url }}"  "{{ default_prefix }}"
  when: (cert_present.rc != 0 or (cert_valid is defined and (cert_valid.rc != 0 ))) and (cert_url is defined)

